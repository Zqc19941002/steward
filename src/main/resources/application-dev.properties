#数据库
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.0.111:3306/steward?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=duanhong
spring.datasource.password=1qaz!QAZ
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 连接池的补充设置
spring.datasource.initialSize=5
spring.datasource.minIdle=10
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.filters=stat,wall,log4j,config
spring.datasource.logSlowSql=true
spring.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANXrqAB9O1DZA/rTb93XbmjCXfCeoJpBcyxDUAR90X4dklEeX+3Whz+AOLMOh5duZK6+T+wGhHG0XE9UAl1CmfkCAwEAAQ==
# 配置启用加密，配置公钥。
spring.datasource.connectionProperties=config.decrypt=false;config.decrypt.key=${spring.datasource.publicKey}
# 启动ConfigFilter
spring.datasource.druid.filter.config.enabled=false

# logback日志配置
logging.config=classpath:config/dev/logback-dev.xml





# Redis配置
# Redis服务器地址
spring.redis.host=192.168.0.111
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器连接端口
spring.redis.port=6379
# Redis链接密码
spring.redis.password=1qaz!QAZ
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=200
# 连接池最大阻塞等待时间（毫秒）（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=20
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000

#jpa配置
#spring.jpa.database=mysql
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
##spring.jpa.hibernate.naming.physical-strategy = top.duanhong.steward.config.UpperTableStrategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# MongoDB 配置
spring.data.mongodb.host=192.168.0.111
spring.data.mongodb.port=27017
spring.data.mongodb.database=steward
spring.data.mongodb.grid-fs-database=steward
spring.data.mongodb.username=duanhong
spring.data.mongodb.password=1qaz!QAZ
spring.data.mongodb.authentication-database=steward
spring.data.mongodb.bucket=fs
#spring.data.mongodb.uri=mongodb://119.23.21.152:27017/ai?slaveOk=true&replicaSet=zypcy&write=1&readPreference=secondaryPreferred&connectTimeoutMS=300000
#每个主机的连接数
spring.data.mongodb.connections-per-host=20
#线程队列数，它以上面connectionsPerHost值相乘的结果就是线程队列最大值
spring.data.mongodb.threads-allowed-to-block-for-connection-multiplier=20
spring.data.mongodb.connect-timeout=10000
spring.data.mongodb.socket-timeout=10000
spring.data.mongodb.max-wait-time=5000
#控制是否在一个连接时，系统会自动重试
spring.data.mongodb.auto-connect-retry=true
spring.data.mongodb.socket-keep-alive=true

# limit upload file size
spring.servlet.multipart.max-file-size=1024MB
spring.servlet.multipart.max-request-size=1024MB


#Eureka配置
eureka.instance.hostname=192.168.0.111
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${server.port}}
eureka.instance.appname=${spring.application.name}
eureka.instance.prefer-ip-address=true
#eureka客户端配置，注册服务
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://admin:123456@139.9.135.26:8762/eureka/,http://admin:123456@119.23.21.152:8761/eureka/
eureka.client.service-url.defaultZone=http://admin:1qaz!QAZ@192.168.0.111:8763/eureka/

spring.cloud.inetutils.timeout-seconds=10

netTagState=1

qiniu.accessKey=wSev1gzynuXgxcEYMfGcsli2c4R9hKbErgs0s-7Z
qiniu.secretKey=5DsX2S7MMFaDcoV27TwfPmB9Rh0Uo26utVzTeeg_
qiniu.bucket=duanhong-bucket
qiniu.downloadUrl=https://img.october2.top/



